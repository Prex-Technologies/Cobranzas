{
	"name": "dfDeudores",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DeudoresXls",
						"type": "DatasetReference"
					},
					"name": "DeudoresXls"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DeudoresSQL",
						"type": "DatasetReference"
					},
					"name": "DeudoresDiario"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          {Fecha (YYYY-MM-DD)} as timestamp,",
				"          {Número de Cédula} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DeudoresXls",
				"DeudoresXls sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          Fecha as timestamp,",
				"          Cedula as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     postSQLs:['INSERT INTO [dbo].[Deudores]\\n           ([Cedula]\\n           ,[FechaIngreso]\\n           ,[Estado])\\n   select cedula, fecha FechaIngreso , \\'Ingresado\\'\\n   from DeudoresDiario\\n   where cedula not in (select Cedula from Deudores)','Delete from DeudoresDiario'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Fecha = {Fecha (YYYY-MM-DD)},",
				"          Cedula = {Número de Cédula}",
				"     )) ~> DeudoresDiario"
			]
		}
	}
}